{"version":3,"sources":["Alerts.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alerts","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capatilize","msg","class","data-bs-dismiss","aria-label","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","aboutUs","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","backgroundColor","color","borderColor","borderStyle","padding","_useState4","Fragment","style","heading","onChange","event","console","log","target","value","rows","placeholder","data-bs-placement","newText","showAlert","sel","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","App","setMode","setAlert","message","setTimeout","body","src_Alerts","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.df5dc19e.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Alerts(props) {\n  const capatilize = (word)=>{\n    const lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n  }\n  return (\n      \n  \n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n       <strong>{capatilize(props.alert.type)} ! </strong>{props.alert.msg}\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n    </div>\n \n    \n  )\n}\n\nexport default Alerts\n","import React from 'react'\nimport propTypes from 'prop-types'\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"#\">{props.aboutUs}</a>\n        </li>\n      </ul>\n      <div className=\"form-check form-switch\">\n  <input className=\"form-check-input text-secondary\" onClick ={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n  <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n</div>\n    </div>\n  </div>\n</nav>\n  )\n}\nNavbar.propTypes = { \n  title: propTypes.string.isRequired,\n  aboutUs: propTypes.string.isRequired\n}\nNavbar.defaultProps = {\n  title: 'Website Title',\n  aboutUs: 'Website About Us'\n};","import React    ,{useState} from 'react'\nimport propTypes from 'prop-types'\n\nexport default function Textform(props) \n{\n    const handleUpClick = ()=>{\n        console.log(\"Uppercase was clicked \"+ text);\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to uppercase \",'success');\n    }\n    const handleLowClick = ()=>{\n        console.log(\"Lowercase was clicked \"+ text);\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to lowercase \",'success');\n    }\n    const handleClearClick = ()=>{\n        console.log(\"Lowercase was clicked \"+ text);\n\n        setText('');\n        props.showAlert(\"Cleared the entire text area successfully\",'success')\n    }\n    const [text, setText] = useState('');\n    const [conStyle, setStyle]=useState({\n        backgroundColor:'white',\n        color:'black',\n        borderColor:'#121212',\n        borderStyle:'solid ',\n        padding:3\n\n    })\n    const handleOnChange =(event)=>{\n        console.log(\"On change\");\n        setText(event.target.value);\n        \n    }\n    const handleCopyClick=()=>{\n        let sel = document.getElementById('1');\n        sel.select();\n        navigator.clipboard.writeText(sel.value);\n        props.showAlert(\"Copied the text to clipboard successfully\",'success');\n\n    }\n    const handleExtraSpaces=()=>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"))\n        props.showAlert(\"Removed all the extra spaces successfully\",'success');\n    }\n    \n      \n    \n    return (\n        <>\n      \n    <div className='container ' style={{color  : props.mode==='dark'?'white':'black' }}>\n        \n         <h3>{props.heading }</h3>\n        <div className=\"mb-3\">\n       \n        <textarea className=\"form-control \"\n        style={{backgroundColor: props.mode==='dark'?'#121212':'white', \n        color:props.mode==='dark'?'white':'black'\n        }} \n        onChange={handleOnChange} value={text} id=\"1\" rows=\"8\" placeholder=\"Please Enter Your Text Here\" ></textarea>\n        </div>  \n        <button className=\"btn btn-secondary mx-0.5 my-2\" data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\" title=\"Convert to Uppercase\" onClick={handleUpClick} >\n            Convert to Uppercase\n        </button>\n        <button className=\"btn btn-secondary mx-1 my-2\" onClick={handleLowClick} >\n            Convert to Lowercase\n        </button>\n        <button className=\"btn btn-secondary mx-1 my-2\" onClick={handleClearClick} >\n            Clear the text\n        </button>\n        <button className=\"btn btn-secondary mx-1 my-2\" onClick={handleCopyClick} >\n            Copy to Clipboard\n        </button>\n        <button className=\"btn btn-secondary mx-1 my-2\" onClick={handleExtraSpaces} >\n            Remove Extra Spaces\n        </button>\n    </div>\n    <div className=\"container  d-flex flex-column  my-3\" style={{ color:props.mode==='dark'?'white':'black'}}  >\n        <h3 className='text-default'>Your Text Summary</h3>\n        <p className='text-default'><span className='text-secondary font-weight-bold'>{text.split(\" \").length}</span> words and <span className='text-secondary font-weight-bold'> {text.length} </span> characters\n         <br /><b>{0.008*text.split(\" \").length}</b> Minutes are required to read</p>\n        <h2>Preview</h2>\n        <p>{text.length>0?text:\"Enter something in the above text box to preview it here\"}  </p>\n    </div>\n    \n    </>\n  )\n}\nTextform.propTypes ={\n    heading: propTypes.string.isRequired\n}\nTextform.defaultProps ={\n    heading: 'Enter you heading Here'\n};","import React, { useState } from 'react'\nimport Alerts from './Alerts';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport './components/Textform';\nimport Textform from './components/Textform';\nimport About from './components/About';\nfunction App() {\n  const[mode, setMode]= useState('light');\n  const[alert, setAlert] =useState(null);\n  const showAlert =(message , type)=>{\n    setAlert({\n      msg :message,\n      type :type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n\n    },2000)\n\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor ='#121212';\n      showAlert(\"You have enabled Dark Mode\",'success');\n      document.title='TextUtils -Dark Mode';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor ='white';\n      showAlert(\"You have enable Light Mode\",'success');\n      document.title='TextUtils -Light Mode';\n    }\n  }\n  return (\n    <>\n    <Navbar title =\"TextUtils\" aboutUs=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alerts alert={alert}/>\n    <div className=\"container my-3\">\n    <Textform heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert}/>\n    \n    </div>\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}